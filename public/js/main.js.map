{"version":3,"names":[],"mappings":"","sources":["main.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\n// require('./bootstrap');\n\nVue.component('date-range-picker', {\n  props: ['id'],\n  template: '<input type=\"text\" :id=\"id\" :name=\"id\" />',\n  mounted: function mounted() {\n    var self = this;\n    var input = $('input[name=\"' + this.id + '\"]');\n    input.daterangepicker();\n    input.on('apply.daterangepicker', function (ev, picker) {\n      self.$emit('daterangechanged', picker);\n    });\n  }\n});\n\nVue.directive('selecttwo', {\n  twoWay: true,\n  bind: function bind() {\n    $(this.el).select2().on(\"select2:select\", function (e) {\n      this.set($(this.el).val());\n    }.bind(this));\n  },\n  update: function update(nv, ov) {\n    $(this.el).trigger(\"change\");\n  }\n});\n\nvar vm = new Vue({\n  el: '#app',\n  data: {\n    isProcessing: false,\n    errors: {},\n    withErrors: false,\n    form: {}\n  },\n\n  created: function created() {\n    // Vue.set(this.$data, 'form', _form);\n  },\n\n  methods: {\n\n    onSubmit: function onSubmit() {\n      this.isProcessing = true;\n      this.withErrors = false;\n      this.errors = {};\n      this.$http.post('/purchase', this.form).then(function (response) {\n\n        if (response.data.created) {\n\n          swal({\n            title: \"Success\",\n            text: \"Record was successfully saved.\",\n            type: \"success\",\n            closeOnConfirm: true,\n            showLoaderOnConfirm: true\n          }, function () {\n            window.location = '/purchase/';\n          });\n        } else {\n          this.isProcessing = false;\n          this.withErrors = true;\n        }\n      }, function (response) {\n        console.log('Error!:', response.data);\n        this.isProcessing = false;\n        this.withErrors = true;\n        Vue.set(this.$data, 'errors', response.data);\n      });\n    },\n\n    addRow: function addRow() {\n      try {\n        this.form.rows.push({ item_id: '', qty: 1, cost: 0, subtotal: 0 });\n      } catch (e) {\n        console.log(e);\n        alert('error');\n      }\n    },\n\n    deleteRow: function deleteRow(row) {\n      try {\n        this.form.rows.$remove(row);\n      } catch (e) {\n        console.log(e);\n        alert('error');\n      }\n    },\n\n    onChangeSubTotal: function onChangeSubTotal(row) {\n      row.subtotal = row.qty * row.cost;\n    },\n\n    onChange: function onChange(row) {\n      var ItemId = row.item_id;\n\n      // GET /someUrl\n      this.$http.get('/api/item/' + ItemId).then(function (response) {\n        var obj = JSON.parse(response.body);\n        row.cost = obj[0]['cost'];\n      }, function (response) {\n        console.log(response);\n        alert('error');\n      });\n    }\n\n  },\n\n  computed: {\n\n    trsubtotal: function trsubtotal() {\n      var tot = 0;\n      tot = this.form.rows.reduce(function (carry, row) {\n        return carry + parseFloat(row.qty) * parseFloat(row.cost);\n      }, 0);\n\n      this.form.trsubtotal = tot;\n      return tot;\n    },\n\n    trtotal: function trtotal() {\n      var tot = parseFloat(this.trsubtotal) - parseFloat(this.form.trdiscount);\n      this.form.trtotal = tot;\n      return tot;\n    }\n  },\n\n  watch: {}\n\n});\n\n},{}]},{},[1]);\n"],"file":"main.js"}